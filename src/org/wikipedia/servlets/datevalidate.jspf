<%--
    @(#)datevalidate.jspf 0.01 26/08/2018
    Copyright (C) 2018 - 20xx MER-C
  
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<%--
    Fetches and validates date ranges. Defaults may be supplied as the earliest_default
    and latest_default request attributes. Adds the following local variables:

        * earliest: the earliest date as a String, or the appropriate default value
        * latest: the latest date as a String, or the appropriate default value
        * earliestdate: the earliest date as an OffsetDateTime, or the default value
        * latestdate: the latest date as an OffsetDateTime, or the default value

    If the date range is invalid, an "error" attribute is added to the request.
--%>

<%
    String earliest = ServletUtils.sanitizeForAttribute(request.getParameter("earliest"));
    String latest = ServletUtils.sanitizeForAttribute(request.getParameter("latest"));

    OffsetDateTime earliestdate = (OffsetDateTime)request.getAttribute("earliest_default");
    OffsetDateTime latestdate = (OffsetDateTime)request.getAttribute("latest_default");

    if (!earliest.equals(""))        
        earliestdate = OffsetDateTime.parse(earliest + "T00:00:00Z");
    else if (earliestdate != null)
        earliest = earliestdate.format(DateTimeFormatter.ISO_LOCAL_DATE);
    
    if (!latest.equals(""))    
        latestdate = OffsetDateTime.parse(earliest + "T23:59:59Z");
    else if (latestdate != null)
        latest = latestdate.format(DateTimeFormatter.ISO_LOCAL_DATE);

    // validate dates
    if (earliestdate != null && latestdate != null && earliestdate.isAfter(latestdate))
        request.setAttribute("error", "Earliest date is after latest date!");
%>